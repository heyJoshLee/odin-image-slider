{"version":3,"file":"main.js","mappings":"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","sources":["webpack://odin-image-slider/./src/imageSlider.js","webpack://odin-image-slider/./src/index.js"],"sourcesContent":["const ImageSlider = (containerHeight, containerWidth) => {\n  let parent;\n  const element = document.createElement('div');\n  element.style.position = 'relative';\n  element.style.display = 'grid';\n  element.style.gridTemplateRows = '1fr 1fr';\n  element.style.paddingTop = `${containerHeight / 2}px`;\n\n  let buttonContainer;\n  const navButtonBaseSize = 10;\n  let sliderTimeInMilliseconds = 4000;\n  let autoAdvanceInterval = null;\n\n  const imagePaths = [];\n  let currentImagePathIndex = 0;\n  element.id = 'image-slider';\n\n  const setUpAutomaticSlider = () => {\n    if (autoAdvanceInterval) {\n      clearInterval(autoAdvanceInterval);\n    }\n    autoAdvanceInterval = setInterval(autoAdvanceSlide, sliderTimeInMilliseconds);\n  };\n\n  const setSliderTimeInMilliseconds = (newSeconds) => {\n    clearInterval(autoAdvanceInterval);\n    sliderTimeInMilliseconds = newSeconds;\n    autoAdvanceInterval = setInterval(autoAdvanceSlide, sliderTimeInMilliseconds);\n  };\n\n  const autoAdvanceSlide = () => {\n    let newSlideIndex;\n    if (currentImagePathIndex === imagePaths.length - 1) {\n      newSlideIndex = 0;\n    } else {\n      newSlideIndex = currentImagePathIndex + 1;\n    }\n    moveToSlideIndexOf(newSlideIndex);\n    changeActiveNavButton();\n  };\n\n  const renderButtonContainer = () => {\n    buttonContainer = document.createElement('div');\n    buttonContainer.style.display = 'grid';\n    buttonContainer.style.gridTemplateRows = '1fr 1fr';\n    buttonContainer.style.alignItems = 'flex-end';\n    buttonContainer.style.width = `${containerWidth}px`;\n    buttonContainer.style.height = `${containerHeight}px`;\n    buttonContainer.style.position = 'absolute';\n    buttonContainer.style.top = '0px';\n    buttonContainer.style.left = '0px';\n\n    element.appendChild(buttonContainer);\n  };\n\n  const createButton = (buttonDirection) => {\n    const button = document.createElement('div');\n    button.style.backgroundColor = 'lightgrey';\n    button.style.borderRadius = '100px';\n    button.style.width = '20px';\n    button.style.textAlign = 'center';\n    button.style.zIndex = '1';\n    button.style.cursor = 'pointer';\n    button.classList.add('direction-button');\n\n    if (buttonDirection === 'left') {\n      button.textContent = '<';\n    } else if (buttonDirection === 'right') {\n      button.textContent = '>';\n    }\n    return button;\n  };\n\n  const renderDirectionButtons = () => {\n    const directionButtonContainer = document.createElement('div');\n    directionButtonContainer.style.zIndex = 1;\n    directionButtonContainer.style.display = 'flex';\n    directionButtonContainer.style.gridTemplateRows = '1fr 1fr';\n    directionButtonContainer.style.alignItems = 'center';\n    directionButtonContainer.style.justifyContent = 'space-between';\n    directionButtonContainer.style.width = containerWidth;\n\n    buttonContainer.appendChild(directionButtonContainer);\n    const leftButton = createButton('left');\n    const rightButton = createButton('right');\n\n    directionButtonContainer.appendChild(leftButton);\n    directionButtonContainer.appendChild(rightButton);\n\n    leftButton.addEventListener('mousedown', () => {\n      moveLeft();\n    });\n\n    rightButton.addEventListener('mousedown', () => {\n      moveRight();\n    });\n  };\n\n  const setDirectionButtonStyles = (cssText) => {\n    const buttons = document.querySelectorAll('.direction-button');\n    buttons.forEach((button) => {\n      button.style.cssText = cssText;\n    });\n  };\n\n  const setParent = (parentQuerySelector) => {\n    parent = document.querySelector(parentQuerySelector);\n    parent.appendChild(element);\n  };\n\n  const renderNavButttons = () => {\n    const navButtonContainer = document.createElement('div');\n    navButtonContainer.style.height = '50px';\n    navButtonContainer.style.bottom = '10px';\n    navButtonContainer.style.right = `${containerWidth / 2}px`;\n    navButtonContainer.style.display = 'flex';\n    navButtonContainer.style.justifyContent = 'center';\n    navButtonContainer.style.alignItems = 'center';\n    navButtonContainer.style.zIndex = '1';\n    navButtonContainer.style.gap = '10px';\n\n    buttonContainer.appendChild(navButtonContainer);\n    imagePaths.forEach((path, index) => {\n      renderNavButton(navButtonContainer, index);\n    });\n  };\n\n  const renderNavButton = (navContainer, index) => {\n    const navButton = document.createElement('div');\n    navButton.dataset.index = index;\n    setNavButtonSize(navButton, currentImagePathIndex, index);\n    navButton.style.backgroundColor = 'grey';\n    navButton.style.borderRadius = '100px';\n    navButton.classList.add('nav-button');\n    navButton.style.transitionProperty = 'transform';\n    navButton.style.transitionDuration = '1s';\n    navButton.style.cursor = 'pointer';\n    navContainer.appendChild(navButton);\n    navButton.addEventListener('click', () => {\n      moveToSlideIndexOf(index);\n      changeActiveNavButton();\n    });\n  };\n\n  const setNavButtonStyles = (cssText) => {\n    const buttons = document.querySelectorAll('.nav-button');\n    buttons.forEach((button) => {\n      button.style.cssText = cssText;\n    });\n  };\n\n  const setNavButtonSize = (navButtonToResize, currentIndex, index) => {\n    navButtonToResize.style.width = `${navButtonBaseSize}px`;\n    navButtonToResize.style.height = `${navButtonBaseSize}px`;\n\n    if (index === currentImagePathIndex) {\n      navButtonToResize.style.transform = 'scale(1)';\n    } else {\n      navButtonToResize.style.transform = 'scale(0.5)';\n    }\n  };\n\n  const changeActiveNavButton = () => {\n    const navButtons = document.querySelectorAll('.nav-button');\n    navButtons.forEach((button, index) => {\n      setNavButtonSize(button, currentImagePathIndex, index);\n    });\n  };\n\n  const moveLeft = () => {\n    if (currentImagePathIndex === 0) {\n      moveToSlideIndexOf(imagePaths.length - 1);\n    } else {\n      moveSlideInDirection('left');\n      currentImagePathIndex -= 1;\n    }\n    changeActiveNavButton();\n  };\n\n  const moveRight = () => {\n    if (currentImagePathIndex === imagePaths.length - 1) {\n      moveToSlideIndexOf(0);\n    } else {\n      moveSlideInDirection('right');\n      currentImagePathIndex += 1;\n    }\n    changeActiveNavButton();\n  };\n\n  const moveSlideInDirection = (direction) => {\n    const imageDivs = document.querySelectorAll('.slide');\n    imageDivs.forEach((slide) => {\n      const oldRightPosition = Number(slide.style.right.split('p')[0]);\n      let newRightPosition;\n      if (direction === 'right') {\n        newRightPosition = `${oldRightPosition + containerWidth}px`;\n      } else if (direction === 'left') {\n        newRightPosition = `${oldRightPosition - containerWidth}px`;\n      }\n      slide.style.right = newRightPosition;\n    });\n  };\n\n  const moveToSlideIndexOf = (slideIndexToMoveto) => {\n    const imageDivs = document.querySelectorAll('.slide');\n    const distance = slideIndexToMoveto - currentImagePathIndex;\n    const pixelsToMove = distance * containerWidth;\n    imageDivs.forEach((slide) => {\n      const oldRightPosition = Number(slide.style.right.split('p')[0]);\n      slide.style.right = `${(oldRightPosition + pixelsToMove)}px`;\n    });\n    currentImagePathIndex = slideIndexToMoveto;\n  };\n\n  const addImage = (imagePath) => {\n    imagePaths.push(imagePath);\n    render();\n  };\n\n  const renderSlides = () => {\n    const imageContainer = document.createElement('div');\n    imageContainer.id = 'image-container';\n    imageContainer.style.height = `${containerHeight}px`;\n    imageContainer.style.width = `${containerWidth}px`;\n    imageContainer.style.overflow = 'auto';\n    imageContainer.style.display = 'grid';\n    imageContainer.style.position = 'absolute';\n\n    imageContainer.style.gridTemplateColumns = `repeat(${imagePaths.length}, 1fr)`;\n    imagePaths.forEach((path) => {\n      const newSlide = document.createElement('div');\n      newSlide.classList.add('slide');\n      newSlide.style.position = 'relative';\n      newSlide.style.backgroundImage = `url(${path})`;\n      newSlide.style.height = `${containerHeight}px`;\n      newSlide.style.width = `${containerWidth}px`;\n      newSlide.style.backgroundPosition = 'center';\n      newSlide.style.backgroundSize = 'cover';\n      newSlide.style.right = '0px';\n      newSlide.style.transitionProperty = 'right';\n      newSlide.style.transitionDuration = '1s';\n      imageContainer.appendChild(newSlide);\n      element.appendChild(imageContainer);\n    });\n  };\n\n  const render = () => {\n    element.textContent = '';\n    renderButtonContainer();\n    renderDirectionButtons();\n    renderNavButttons();\n    renderSlides();\n  };\n\n  render();\n  setUpAutomaticSlider();\n\n  return {\n    setParent,\n    addImage,\n    setDirectionButtonStyles,\n    setNavButtonStyles,\n    setSliderTimeInMilliseconds,\n  };\n};\n\nexport default ImageSlider;\n","import ImageSlider from './imageSlider';\n\nconst imageSlider = ImageSlider(500, 500);\nimageSlider.setParent('#page-wrapper');\nimageSlider.addImage('./images/image1.jpg');\nimageSlider.addImage('./images/image2.png');\nimageSlider.addImage('./images/image3.jpg');\n"],"names":["containerHeight","containerWidth","parent","element","document","createElement","buttonContainer","style","position","display","gridTemplateRows","paddingTop","sliderTimeInMilliseconds","autoAdvanceInterval","imagePaths","currentImagePathIndex","id","autoAdvanceSlide","newSlideIndex","length","moveToSlideIndexOf","changeActiveNavButton","createButton","buttonDirection","button","backgroundColor","borderRadius","width","textAlign","zIndex","cursor","classList","add","textContent","setNavButtonSize","navButtonToResize","currentIndex","index","height","transform","querySelectorAll","forEach","moveSlideInDirection","direction","slide","oldRightPosition","Number","right","split","newRightPosition","slideIndexToMoveto","imageDivs","pixelsToMove","render","alignItems","top","left","appendChild","directionButtonContainer","justifyContent","leftButton","rightButton","addEventListener","renderDirectionButtons","navButtonContainer","bottom","gap","path","navContainer","navButton","dataset","transitionProperty","transitionDuration","renderNavButton","renderNavButttons","imageContainer","overflow","gridTemplateColumns","newSlide","backgroundImage","backgroundPosition","backgroundSize","renderSlides","clearInterval","setInterval","setParent","parentQuerySelector","querySelector","addImage","imagePath","push","setDirectionButtonStyles","cssText","setNavButtonStyles","setSliderTimeInMilliseconds","newSeconds"],"sourceRoot":""}